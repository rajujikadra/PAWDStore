//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rimp_India_Site.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Rimp_India_DBEntities : DbContext
    {
        public Rimp_India_DBEntities()
            : base("name=Rimp_India_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category_Master> Category_Master { get; set; }
        public virtual DbSet<MainMenu_Master> MainMenu_Master { get; set; }
        public virtual DbSet<AdminLoginMaster> AdminLoginMasters { get; set; }
        public virtual DbSet<ThirdCategory_Master> ThirdCategory_Master { get; set; }
        public virtual DbSet<Product_CK_Master> Product_CK_Master { get; set; }
        public virtual DbSet<Product_Image_Master> Product_Image_Master { get; set; }
        public virtual DbSet<Product_Master> Product_Master { get; set; }
        public virtual DbSet<Product_Specification_Master> Product_Specification_Master { get; set; }
        public virtual DbSet<Specification_Group_Master> Specification_Group_Master { get; set; }
        public virtual DbSet<Information_Master> Information_Master { get; set; }
        public virtual DbSet<Email_Group_Master> Email_Group_Master { get; set; }
        public virtual DbSet<Subscribe_Master> Subscribe_Master { get; set; }
        public virtual DbSet<SubCategory_Master> SubCategory_Master { get; set; }
    
        public virtual ObjectResult<RGetCategory_Result> RGetCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RGetCategory_Result>("RGetCategory");
        }
    
        public virtual ObjectResult<string> CategoryInsert(string category_Name, Nullable<int> menu_ID, Nullable<bool> isDeleted)
        {
            var category_NameParameter = category_Name != null ?
                new ObjectParameter("Category_Name", category_Name) :
                new ObjectParameter("Category_Name", typeof(string));
    
            var menu_IDParameter = menu_ID.HasValue ?
                new ObjectParameter("Menu_ID", menu_ID) :
                new ObjectParameter("Menu_ID", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CategoryInsert", category_NameParameter, menu_IDParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<string> MainMenuInsert(string menu_Name, Nullable<bool> isDeleted)
        {
            var menu_NameParameter = menu_Name != null ?
                new ObjectParameter("Menu_Name", menu_Name) :
                new ObjectParameter("Menu_Name", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MainMenuInsert", menu_NameParameter, isDeletedParameter);
        }
    
        public virtual ObjectResult<RGetSubCategory_Result1> RGetSubCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RGetSubCategory_Result1>("RGetSubCategory");
        }
    
        public virtual ObjectResult<GetHomePageProduct_Result> GetHomePageProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHomePageProduct_Result>("GetHomePageProduct");
        }
    
        public virtual ObjectResult<string> ThirdCategoryInsert(Nullable<int> subCategory_ID, string thirdCategoryName)
        {
            var subCategory_IDParameter = subCategory_ID.HasValue ?
                new ObjectParameter("SubCategory_ID", subCategory_ID) :
                new ObjectParameter("SubCategory_ID", typeof(int));
    
            var thirdCategoryNameParameter = thirdCategoryName != null ?
                new ObjectParameter("ThirdCategoryName", thirdCategoryName) :
                new ObjectParameter("ThirdCategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ThirdCategoryInsert", subCategory_IDParameter, thirdCategoryNameParameter);
        }
    
        public virtual ObjectResult<string> ThirdCategoryUpdate(Nullable<int> thirdCategory_ID, Nullable<int> subCategory_ID, string thirdCategoryName)
        {
            var thirdCategory_IDParameter = thirdCategory_ID.HasValue ?
                new ObjectParameter("ThirdCategory_ID", thirdCategory_ID) :
                new ObjectParameter("ThirdCategory_ID", typeof(int));
    
            var subCategory_IDParameter = subCategory_ID.HasValue ?
                new ObjectParameter("SubCategory_ID", subCategory_ID) :
                new ObjectParameter("SubCategory_ID", typeof(int));
    
            var thirdCategoryNameParameter = thirdCategoryName != null ?
                new ObjectParameter("ThirdCategoryName", thirdCategoryName) :
                new ObjectParameter("ThirdCategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ThirdCategoryUpdate", thirdCategory_IDParameter, subCategory_IDParameter, thirdCategoryNameParameter);
        }
    
        public virtual ObjectResult<GetSideBarProductList_Result> GetSideBarProductList(Nullable<int> subCategory_ID)
        {
            var subCategory_IDParameter = subCategory_ID.HasValue ?
                new ObjectParameter("SubCategory_ID", subCategory_ID) :
                new ObjectParameter("SubCategory_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSideBarProductList_Result>("GetSideBarProductList", subCategory_IDParameter);
        }
    
        public virtual ObjectResult<GetProductMenu_Result> GetProductMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductMenu_Result>("GetProductMenu");
        }
    
        public virtual ObjectResult<GetProductSubCategory_Result> GetProductSubCategory(Nullable<int> menu_ID)
        {
            var menu_IDParameter = menu_ID.HasValue ?
                new ObjectParameter("Menu_ID", menu_ID) :
                new ObjectParameter("Menu_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductSubCategory_Result>("GetProductSubCategory", menu_IDParameter);
        }
    
        public virtual ObjectResult<string> ProductInsert(string product_Title, string product_short_description, string product_long_description, Nullable<System.DateTime> created_date, Nullable<System.DateTime> updated_date, Nullable<int> category_ID, Nullable<int> subCategory_ID, Nullable<int> thirdCategory_ID, Nullable<decimal> product_Price)
        {
            var product_TitleParameter = product_Title != null ?
                new ObjectParameter("Product_Title", product_Title) :
                new ObjectParameter("Product_Title", typeof(string));
    
            var product_short_descriptionParameter = product_short_description != null ?
                new ObjectParameter("Product_short_description", product_short_description) :
                new ObjectParameter("Product_short_description", typeof(string));
    
            var product_long_descriptionParameter = product_long_description != null ?
                new ObjectParameter("Product_long_description", product_long_description) :
                new ObjectParameter("Product_long_description", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("Created_date", created_date) :
                new ObjectParameter("Created_date", typeof(System.DateTime));
    
            var updated_dateParameter = updated_date.HasValue ?
                new ObjectParameter("Updated_date", updated_date) :
                new ObjectParameter("Updated_date", typeof(System.DateTime));
    
            var category_IDParameter = category_ID.HasValue ?
                new ObjectParameter("Category_ID", category_ID) :
                new ObjectParameter("Category_ID", typeof(int));
    
            var subCategory_IDParameter = subCategory_ID.HasValue ?
                new ObjectParameter("SubCategory_ID", subCategory_ID) :
                new ObjectParameter("SubCategory_ID", typeof(int));
    
            var thirdCategory_IDParameter = thirdCategory_ID.HasValue ?
                new ObjectParameter("ThirdCategory_ID", thirdCategory_ID) :
                new ObjectParameter("ThirdCategory_ID", typeof(int));
    
            var product_PriceParameter = product_Price.HasValue ?
                new ObjectParameter("Product_Price", product_Price) :
                new ObjectParameter("Product_Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProductInsert", product_TitleParameter, product_short_descriptionParameter, product_long_descriptionParameter, created_dateParameter, updated_dateParameter, category_IDParameter, subCategory_IDParameter, thirdCategory_IDParameter, product_PriceParameter);
        }
    
        public virtual ObjectResult<GetProductImage_Result> GetProductImage(Nullable<int> product_ID)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductImage_Result>("GetProductImage", product_IDParameter);
        }
    
        public virtual ObjectResult<string> ProductImageInsert(Nullable<int> product_ID, byte[] product_image, string image_name, Nullable<System.DateTime> created_date, Nullable<System.DateTime> updated_date, string alterText)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            var product_imageParameter = product_image != null ?
                new ObjectParameter("Product_image", product_image) :
                new ObjectParameter("Product_image", typeof(byte[]));
    
            var image_nameParameter = image_name != null ?
                new ObjectParameter("Image_name", image_name) :
                new ObjectParameter("Image_name", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("Created_date", created_date) :
                new ObjectParameter("Created_date", typeof(System.DateTime));
    
            var updated_dateParameter = updated_date.HasValue ?
                new ObjectParameter("Updated_date", updated_date) :
                new ObjectParameter("Updated_date", typeof(System.DateTime));
    
            var alterTextParameter = alterText != null ?
                new ObjectParameter("AlterText", alterText) :
                new ObjectParameter("AlterText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProductImageInsert", product_IDParameter, product_imageParameter, image_nameParameter, created_dateParameter, updated_dateParameter, alterTextParameter);
        }
    
        public virtual ObjectResult<string> ProductCKInsert(Nullable<int> product_ID, string cK_Title, string description, Nullable<System.DateTime> created_date, Nullable<System.DateTime> updated_date)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            var cK_TitleParameter = cK_Title != null ?
                new ObjectParameter("CK_Title", cK_Title) :
                new ObjectParameter("CK_Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("Created_date", created_date) :
                new ObjectParameter("Created_date", typeof(System.DateTime));
    
            var updated_dateParameter = updated_date.HasValue ?
                new ObjectParameter("Updated_date", updated_date) :
                new ObjectParameter("Updated_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProductCKInsert", product_IDParameter, cK_TitleParameter, descriptionParameter, created_dateParameter, updated_dateParameter);
        }
    
        public virtual ObjectResult<string> Product_specification_insert(Nullable<int> specGrpID, Nullable<int> product_ID, string specification_Title, string specification_Value, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> updatedDate)
        {
            var specGrpIDParameter = specGrpID.HasValue ?
                new ObjectParameter("SpecGrpID", specGrpID) :
                new ObjectParameter("SpecGrpID", typeof(int));
    
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            var specification_TitleParameter = specification_Title != null ?
                new ObjectParameter("Specification_Title", specification_Title) :
                new ObjectParameter("Specification_Title", typeof(string));
    
            var specification_ValueParameter = specification_Value != null ?
                new ObjectParameter("Specification_Value", specification_Value) :
                new ObjectParameter("Specification_Value", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Product_specification_insert", specGrpIDParameter, product_IDParameter, specification_TitleParameter, specification_ValueParameter, createdDateParameter, updatedDateParameter);
        }
    
        [DbFunction("Rimp_India_DBEntities", "SplitString")]
        public virtual IQueryable<string> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[Rimp_India_DBEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<GetLastProduct_Result> GetLastProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLastProduct_Result>("GetLastProduct");
        }
    
        public virtual ObjectResult<GetAllProducts_Result2> GetAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProducts_Result2>("GetAllProducts");
        }
    
        public virtual ObjectResult<string> Product_specification_group_insert(Nullable<int> product_ID, string specification_Group)
        {
            var product_IDParameter = product_ID.HasValue ?
                new ObjectParameter("Product_ID", product_ID) :
                new ObjectParameter("Product_ID", typeof(int));
    
            var specification_GroupParameter = specification_Group != null ?
                new ObjectParameter("Specification_Group", specification_Group) :
                new ObjectParameter("Specification_Group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Product_specification_group_insert", product_IDParameter, specification_GroupParameter);
        }
    
        public virtual ObjectResult<GetAllProductSubCategoryWise_Result1> GetAllProductSubCategoryWise(Nullable<int> subCategoryID)
        {
            var subCategoryIDParameter = subCategoryID.HasValue ?
                new ObjectParameter("SubCategoryID", subCategoryID) :
                new ObjectParameter("SubCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProductSubCategoryWise_Result1>("GetAllProductSubCategoryWise", subCategoryIDParameter);
        }
    
        public virtual ObjectResult<GetAllProductThirdCategoryWise_Result1> GetAllProductThirdCategoryWise(string thirdCategory_ID)
        {
            var thirdCategory_IDParameter = thirdCategory_ID != null ?
                new ObjectParameter("ThirdCategory_ID", thirdCategory_ID) :
                new ObjectParameter("ThirdCategory_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProductThirdCategoryWise_Result1>("GetAllProductThirdCategoryWise", thirdCategory_IDParameter);
        }
    
        public virtual ObjectResult<GetHotProduct_Result1> GetHotProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHotProduct_Result1>("GetHotProduct");
        }
    
        public virtual ObjectResult<string> SubCategoryInsert(string subCategory_Name, Nullable<int> category_ID, Nullable<bool> isDeleted, byte[] image, Nullable<bool> isHomePage, string imageName, Nullable<decimal> sortable, string heading, string description, byte[] page_Image, string page_Image_Name, string alterText)
        {
            var subCategory_NameParameter = subCategory_Name != null ?
                new ObjectParameter("SubCategory_Name", subCategory_Name) :
                new ObjectParameter("SubCategory_Name", typeof(string));
    
            var category_IDParameter = category_ID.HasValue ?
                new ObjectParameter("Category_ID", category_ID) :
                new ObjectParameter("Category_ID", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(byte[]));
    
            var isHomePageParameter = isHomePage.HasValue ?
                new ObjectParameter("IsHomePage", isHomePage) :
                new ObjectParameter("IsHomePage", typeof(bool));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var sortableParameter = sortable.HasValue ?
                new ObjectParameter("Sortable", sortable) :
                new ObjectParameter("Sortable", typeof(decimal));
    
            var headingParameter = heading != null ?
                new ObjectParameter("Heading", heading) :
                new ObjectParameter("Heading", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var page_ImageParameter = page_Image != null ?
                new ObjectParameter("Page_Image", page_Image) :
                new ObjectParameter("Page_Image", typeof(byte[]));
    
            var page_Image_NameParameter = page_Image_Name != null ?
                new ObjectParameter("Page_Image_Name", page_Image_Name) :
                new ObjectParameter("Page_Image_Name", typeof(string));
    
            var alterTextParameter = alterText != null ?
                new ObjectParameter("AlterText", alterText) :
                new ObjectParameter("AlterText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SubCategoryInsert", subCategory_NameParameter, category_IDParameter, isDeletedParameter, imageParameter, isHomePageParameter, imageNameParameter, sortableParameter, headingParameter, descriptionParameter, page_ImageParameter, page_Image_NameParameter, alterTextParameter);
        }
    }
}
